#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : lmb_v10
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN lmb_v10

## Peripheral Options
OPTION IPTYPE = BUS
OPTION IMP_NETLIST = TRUE
OPTION BUS_STD = LMB
OPTION MAX_MASTERS = 1
OPTION MAX_SLAVES = 16
OPTION DWIDTH = 32
OPTION AWIDTH = 32
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION RUN_NGCBUILD = TRUE
OPTION DESC = Local Memory Bus (LMB) 1.0
OPTION LONG_DESC = 'The LMB is a fast, local bus for connecting MicroBlaze I and D ports to peripherals and BRAM'
OPTION IP_GROUP = Bus and Bridge:MICROBLAZE
OPTION ARCH_SUPPORT_MAP = (virtex5tx=PRODUCTION, aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRODUCTION, qvirtex6sx=PRODUCTION, qvirtex6fx=PRODUCTION, qvirtex6tx=PRODUCTION)
OPTION HDL = MIXED
OPTION STYLE = HDL

IO_INTERFACE IO_IF = reset_0

## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_LMB_NUM_SLAVES = 4, DT = integer
PARAMETER C_LMB_AWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_LMB_DWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, RANGE = (0,1), IO_IF = reset_0, IO_IS = polarity

## Ports
PORT LMB_Clk = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT SYS_Rst = "", DIR = I, ASSIGNMENT = REQUIRE
PORT LMB_Rst = LMB_Rst, DIR = O
PORT M_ABus = M_ABus, DIR = I, VEC = [0:C_LMB_AWIDTH-1]
PORT M_ReadStrobe = M_ReadStrobe, DIR = I
PORT M_WriteStrobe = M_WriteStrobe, DIR = I
PORT M_AddrStrobe = M_AddrStrobe, DIR = I
PORT M_DBus = M_DBus, DIR = I, VEC = [0:C_LMB_DWIDTH-1]
PORT M_BE = M_BE, DIR = I, VEC = [0:(C_LMB_DWIDTH+7)/8-1]
PORT Sl_DBus = Sl_DBus, DIR = I, VEC = [0:(C_LMB_DWIDTH*C_LMB_NUM_SLAVES)-1], INITIALVAL = VCC
PORT Sl_Ready = Sl_Ready, DIR = I, VEC = [0:C_LMB_NUM_SLAVES-1], INITIALVAL = VCC
PORT LMB_ABus = LMB_ABus, DIR = O, VEC = [0:C_LMB_AWIDTH-1]
PORT LMB_ReadStrobe = LMB_ReadStrobe, DIR = O
PORT LMB_WriteStrobe = LMB_WriteStrobe, DIR = O
PORT LMB_AddrStrobe = LMB_AddrStrobe, DIR = O
PORT LMB_ReadDBus = LMB_ReadDBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1]
PORT LMB_WriteDBus = LMB_WriteDBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1]
PORT LMB_Ready = LMB_Ready, DIR = O
PORT LMB_BE = LMB_BE, DIR = O, VEC = [0:(C_LMB_DWIDTH+7)/8-1]

END
